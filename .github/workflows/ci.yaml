name: build-test-publishcontainers

on:
  push:
    paths-ignore:
      - 'charts/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'charts/**'
      - '**.md'

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    steps:
      # setup
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @3.1.0
        with:
          submodules: 'recursive'
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # @3.3.1
        with:
          go-version: '1.20'

      - name: Start containers
        run: docker-compose up -d

      - name: ps containers
        run: docker-compose ps

      # prepare
      - run: sudo apt update && sudo apt install -y pkg-config libelf-dev clang
      - run: go install github.com/mgechev/revive@latest
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@32051b4f86e54c2142c7c05362c6e96ae3454a1c # @v1.28.0
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@938f6e2f7550e542bd78f3b9e8812665db109e02 # @v1.1.0
      - run: make bin/protoc

      - run: make build
      - run: make lint
      - run: make unit-test
      - run: make e2e-test

      - name: Start containers
        if: always()
        run: docker-compose down

  k8s-test:
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @3.1.0
        with:
          submodules: 'recursive'
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # @3.3.1
        with:
          go-version: '1.20'
      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # @v3.5
        with:
          version: '3.11.0'
      - uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # @1.8.0
        name: Create k8s cluster
        with:
          config: 'dev/cluster-config.yaml'
          kubectl_version: 'v1.28.0'

      # prepare for build
      - run: sudo apt update && sudo apt install -y jq pkg-config libelf-dev clang
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@32051b4f86e54c2142c7c05362c6e96ae3454a1c # @v1.28.0
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@938f6e2f7550e542bd78f3b9e8812665db109e02 # @v1.1.0
      - run: make bin/protoc bin/goreleaser

      # build images
      - run: bash ./dev/run-kind-registry.sh
      - run: make ebpf generate
      - run: ./bin/goreleaser release --snapshot --rm-dist
      - run: make push-local-images
      - run: cp dist/tarianctl_linux_amd64/tarianctl ./bin/

      # deploy to k8s
      - run: make deploy

      # wait for deployment rollout
      - name: Wait for pods ready
        run: |
          kubectl version
          kubectl wait --for=condition=ready pod --all --all-namespaces --timeout=1m || true
          kubectl wait --for=condition=ready pod --all --all-namespaces --timeout=1m || true
          kubectl wait --for=condition=ready pod --all --all-namespaces --timeout=1m || true
          kubectl get pods --all-namespaces
          kubectl get deployment --all-namespaces
          kubectl get svc --all-namespaces
          sleep 5s

      - run: make k8s-test

  publish-containers:
    needs: k8s-test
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @3.1.0
        with:
          submodules: 'recursive'
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f # @3.3.1
        with:
          go-version: '1.20'
      - run: sudo apt update && sudo apt install -y jq pkg-config libelf-dev clang
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@32051b4f86e54c2142c7c05362c6e96ae3454a1c # @v1.28.0
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@938f6e2f7550e542bd78f3b9e8812665db109e02 # @v1.1.0
      - run: make bin/protoc ebpf bin/goreleaser
      - name: Login to GitHub Container Registry
        uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7 # @v1.12.0
        with:
          registry: ghcr.io
          username: devopstoday11
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ./bin/goreleaser
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            ./bin/goreleaser --snapshot
          fi
        env:
          CONTAINER_REGISTRY: ghcr.io/${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: docker images
      - run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            docker push ghcr.io/${{ github.repository_owner}}/tarian-server
            docker push ghcr.io/${{ github.repository_owner}}/tarian-cluster-agent
            docker push ghcr.io/${{ github.repository_owner}}/tarian-node-agent
            docker push ghcr.io/${{ github.repository_owner}}/tarian-pod-agent
            docker push ghcr.io/${{ github.repository_owner}}/tarianctl
          fi

