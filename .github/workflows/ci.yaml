name: CI

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres
        ports:
         - 5432:5432
        env:
          POSTGRES_PASSWORD: tarian
          POSTGRES_DB: tarian
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # setup
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.6'

      # prepare
      - run: GO111MODULE=off go get -u github.com/mgechev/revive
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: make protoc

      # build
      - run: make build

      # lint
      - run: make lint

      # unit-test
      - run: make unit-test

      # e2e-test
      - run: make e2e-test

  k8s-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.6'
      - uses: helm/kind-action@v1.2.0
        name: Create k8s cluster
        with:
          config: 'dev/cluster-config.yaml'

      # prepare for build
      - run: sudo apt update && sudo apt install -y jq
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: make protoc

      # build images
      - run: bash ./dev/run-kind-registry.sh
      - run: make local-images

      # deploy to k8s
      - run: make deploy

      # wait for deployment rollout
      - run: kubectl rollout status statefulset/tarian-postgresql -n tarian-system --timeout=5m
      - run: sleep 10s
      - run: kubectl rollout status deployment/tarian-controller-manager -n tarian-system --timeout=5m
      - run: kubectl rollout status deployment/tarian-cluster-agent -n tarian-system --timeout=5m
      - run: kubectl rollout status deployment/tarian-server -n tarian-system --timeout=5m

      # run db migration and seed data
      - run: kubectl exec -ti deploy/tarian-server -n tarian-system -- ./tarian-server db migrate
      - run: kubectl exec -ti deploy/tarian-server -n tarian-system -- ./tarian-server dev seed-data
      - run: ./bin/tarianctl --server-address=localhost:31051 add constraint --namespace default --match-labels run=nginx --allowed-processes=pause,tarian-pod-agent,nginx
      - run: ./bin/tarianctl --server-address=localhost:31051 get constraints

      # test pod-agent injection
      - run: kubectl run nginx --image=nginx --annotations=pod-agent.k8s.tarian.io/inject=true
      - run: kubectl wait --for=condition=ready pod/nginx
      - run: test $(kubectl get pod nginx -o json | jq -r '.containers | length') -eq 2 || echo "expected container count 2"
      - run: kubectl exec -ti nginx -c nginx -- sleep 15
      # output for debugging
      - run: ./bin/tarianctl --server-address=localhost:31051 get events
      # assert contains sleep
      - run: ./bin/tarianctl --server-address=localhost:31051 get events | grep sleep


